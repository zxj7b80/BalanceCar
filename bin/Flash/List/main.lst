###############################################################################
#                                                                             #
#                                                       30/Sep/2013  20:34:02 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\balance car（9.28高速但出赛道）\src\Sources\C\main.c  #
#    Command line =  "D:\balance car（9.28高速但出赛道）\src\Sources\C\main.c #
#                    " -D IAR -D TWR_K60N512 -lCN "D:\balance                 #
#                    car（9.28高速但出赛道）\bin\Flash\List\" -lB             #
#                    "D:\balance car（9.28高速但出赛道）\bin\Flash\List\" -o  #
#                    "D:\balance car（9.28高速但出赛道）\bin\Flash\Obj\"      #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config E:\IAREW6.3\arm\INC\c\DLib_Config_Normal.h #
#                     -I "D:\balance car（9.28高速但出赛道）\src\Sources\H\"  #
#                    -I "D:\balance car（9.28高速但出赛道）\src\Sources\H\Com #
#                    ponent_H\" -I "D:\balance car（9.28高速但出赛道）\src\So #
#                    urces\H\Frame_H\" -Ol --use_c++_inline                   #
#    List file    =  D:\balance car（9.28高速但出赛道）\bin\Flash\List\main.l #
#                    st                                                       #
#    Object file  =  D:\balance car（9.28高速但出赛道）\bin\Flash\Obj\main.o  #
#                                                                             #
#                                                                             #
###############################################################################

D:\balance car（9.28高速但出赛道）\src\Sources\C\main.c
      1          //头文件
      2          #include "includes.h"
      3          
      4          //全局变量声明
      5          extern int   periph_clk_khz;
      6          
      7          extern int16 left_l;
      8          extern int16 right_l;
      9          extern int16 left_OFFSET;
     10          extern int16 right_OFFSET;
     11          extern uint8 IntegrationTime;
     12          extern uint8 IntegrationTime_Right;

   \                                 In section .bss, align 1
     13          uint8        integration_piont;
   \                     integration_piont:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     14          uint8        integration_piont_Right;
   \                     integration_piont_Right:
   \   00000000                      DS8 1
     15          extern uint8 Pixel[128];
     16          extern uint8 Pixel_1[128];
     17          extern uint8 TIME1flag_20ms;
     18          extern int16 gravity;

   \                                 In section .bss, align 1
     19          uint8        a=0;
   \                     a:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     20          uint8        b=0;
   \                     `b`:
   \   00000000                      DS8 1
     21          
     22          void  system_init();
     23          void  button_init();
     24          //主函数

   \                                 In section .text, align 2, keep-with-next
     25          void main()
     26          {
   \                     main:
   \   00000000   0xB580             PUSH     {R7,LR}
     27             vuint8  i,j;
     28             uint8   *pixel_pt;
     29           //  uint8   send_data_cnt = 0;
     30             pixel_pt = Pixel;
   \   00000002   0x....             LDR.N    R0,??DataTable1
     31             for(j=0; j<128+10; j++) 
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \   0000000A   0xE007             B.N      ??main_0
     32             {
     33                *pixel_pt++ = 0;
   \                     ??main_1:
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x7001             STRB     R1,[R0, #+0]
   \   00000010   0x1C40             ADDS     R0,R0,#+1
     34             }   
   \   00000012   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000016   0x1C49             ADDS     R1,R1,#+1
   \   00000018   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \                     ??main_0:
   \   0000001C   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000020   0x298A             CMP      R1,#+138
   \   00000022   0xD3F3             BCC.N    ??main_1
     35             pixel_pt = Pixel_1;
   \   00000024   0x....             LDR.N    R0,??DataTable1_1
     36             for(j=0; j<128+10; j++) 
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \   0000002C   0xE007             B.N      ??main_2
     37             {
     38                *pixel_pt++ = 0;
   \                     ??main_3:
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x7001             STRB     R1,[R0, #+0]
   \   00000032   0x1C40             ADDS     R0,R0,#+1
     39             }
   \   00000034   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000038   0x1C49             ADDS     R1,R1,#+1
   \   0000003A   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \                     ??main_2:
   \   0000003E   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000042   0x298A             CMP      R1,#+138
   \   00000044   0xD3F3             BCC.N    ??main_3
     40             
     41             system_init();
   \   00000046   0x.... 0x....      BL       system_init
     42             /*  
     43             serial_choose();
     44             uart_send1(UART3 ,  gravity );        //PTC16接串口模块的uart3_RX，PTC17接串口模块的uart3_TX                                         
     45             uart_send1(UART3 , gyro );  
     46             */ 
     47             while(1)                              //等待1ms中断
     48             {
     49               if(TIME1flag_20ms == 1)
   \                     ??main_4:
   \   0000004A   0x....             LDR.N    R0,??DataTable1_2
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x2801             CMP      R0,#+1
   \   00000050   0xD1FB             BNE.N    ??main_4
     50               {
     51                  TIME1flag_20ms = 0; 
   \   00000052   0x....             LDR.N    R0,??DataTable1_2
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x7001             STRB     R1,[R0, #+0]
     52                  get_left();
   \   00000058   0x.... 0x....      BL       get_left
     53                  get_right();
   \   0000005C   0x.... 0x....      BL       get_right
     54                  BlackManange();        
   \   00000060   0x.... 0x....      BL       BlackManange
     55                  LCD_show();
   \   00000064   0x.... 0x....      BL       LCD_show
   \   00000068   0xE7EF             B.N      ??main_4
     56                  
     57          /*        if(++send_data_cnt >= 5)        //每100ms给CCDview发送数据 
     58                  {  
     59                     send_data_cnt =0;
     60                     SendImageData(Pixel);
     61                     //SendImageData(Pixel_1);
     62                  }
     63          */        
     64               }      
     65             }
     66          }
     67          

   \                                 In section .text, align 4, keep-with-next
     68          void system_init()
     69          {
   \                     system_init:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     70              uint16 i,j;
     71           
     72              DisableInterrupts;                          //关闭总中断
   \   00000002   0xB672             CPSID i         
     73              
     74              uart_init(UART3,periph_clk_khz,115200);     //串口初始化
   \   00000004   0xF45F 0x32E1      MOVS     R2,#+115200
   \   00000008   0x....             LDR.N    R0,??DataTable1_3
   \   0000000A   0x6801             LDR      R1,[R0, #+0]
   \   0000000C   0x....             LDR.N    R0,??DataTable1_4  ;; 0x4006d000
   \   0000000E   0x.... 0x....      BL       uart_init
     75              Motor_init();                               //电机初始化   pwm频率为10kHz
   \   00000012   0x.... 0x....      BL       Motor_init
     76              FTM_QUAD_init();                            //正交解码测速初始化
   \   00000016   0x.... 0x....      BL       FTM_QUAD_init
     77              CCD_init();
   \   0000001A   0x.... 0x....      BL       CCD_init
     78              LCD_Init();                                 //OLED液晶初始化
   \   0000001E   0x.... 0x....      BL       LCD_Init
     79              hw_adc_init(0);                             //ADC0初始化 直立控制信息采集
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       hw_adc_init
     80              button_init();
   \   00000028   0x.... 0x....      BL       button_init
     81                  
     82              for(;;)
     83              {              
     84                for(j=0;j<25;j++)
   \                     ??system_init_0:
   \   0000002C   0x2400             MOVS     R4,#+0
   \   0000002E   0xE02D             B.N      ??system_init_1
     85                {
     86                   for(i=0;i<20;i++)
     87                   {
     88                      //delay_ms(2);
     89                      delay_ms(1);             
   \                     ??system_init_2:
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x.... 0x....      BL       delay_ms
     90                      integration_piont = 20 - IntegrationTime;            
   \   00000036   0x....             LDR.N    R0,??DataTable1_5
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0xF1D0 0x0014      RSBS     R0,R0,#+20
   \   0000003E   0x....             LDR.N    R1,??DataTable1_6
   \   00000040   0x7008             STRB     R0,[R1, #+0]
     91                      if(integration_piont >= 2)//曝光点小于2不进行再曝光                
   \   00000042   0x....             LDR.N    R0,??DataTable1_6
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x2802             CMP      R0,#+2
   \   00000048   0xD307             BCC.N    ??system_init_3
     92                      {      
     93                        if(integration_piont == i)           
   \   0000004A   0x....             LDR.N    R0,??DataTable1_6
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000050   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000052   0x42A8             CMP      R0,R5
   \   00000054   0xD101             BNE.N    ??system_init_3
     94                        StartIntegration();                
   \   00000056   0x.... 0x....      BL       StartIntegration
     95                      }
     96                      
     97                      integration_piont_Right = 20 - IntegrationTime_Right;
   \                     ??system_init_3:
   \   0000005A   0x....             LDR.N    R0,??DataTable1_7
   \   0000005C   0x7800             LDRB     R0,[R0, #+0]
   \   0000005E   0xF1D0 0x0014      RSBS     R0,R0,#+20
   \   00000062   0x....             LDR.N    R1,??DataTable1_8
   \   00000064   0x7008             STRB     R0,[R1, #+0]
     98                      if(integration_piont_Right >= 2)//曝光点小于2不进行再曝光                
   \   00000066   0x....             LDR.N    R0,??DataTable1_8
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2802             CMP      R0,#+2
   \   0000006C   0xD307             BCC.N    ??system_init_4
     99                      {      
    100                        if(integration_piont_Right == i)
   \   0000006E   0x....             LDR.N    R0,??DataTable1_8
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000074   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000076   0x42A8             CMP      R0,R5
   \   00000078   0xD101             BNE.N    ??system_init_4
    101                        StartIntegrationRight();         
   \   0000007A   0x.... 0x....      BL       StartIntegrationRight
    102                      }
    103                   }
   \                     ??system_init_4:
   \   0000007E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??system_init_5:
   \   00000080   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000082   0x2D14             CMP      R5,#+20
   \   00000084   0xD3D4             BCC.N    ??system_init_2
    104                   getCCD();
   \   00000086   0x.... 0x....      BL       getCCD
   \   0000008A   0x1C64             ADDS     R4,R4,#+1
   \                     ??system_init_1:
   \   0000008C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008E   0x2C19             CMP      R4,#+25
   \   00000090   0xD201             BCS.N    ??system_init_6
   \   00000092   0x2500             MOVS     R5,#+0
   \   00000094   0xE7F4             B.N      ??system_init_5
    105                }   
    106                left_OFFSET=(int16)(left_l/25);//不合理，left或right可能为255，但可通过人为修正
   \                     ??system_init_6:
   \   00000096   0x....             LDR.N    R0,??DataTable1_9
   \   00000098   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000009C   0x2119             MOVS     R1,#+25
   \   0000009E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000A2   0x....             LDR.N    R1,??DataTable1_10
   \   000000A4   0x8008             STRH     R0,[R1, #+0]
    107                right_OFFSET=(int16)(right_l/25);
   \   000000A6   0x....             LDR.N    R0,??DataTable1_11
   \   000000A8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000AC   0x2119             MOVS     R1,#+25
   \   000000AE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B2   0x....             LDR.N    R1,??DataTable1_12
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
    108                LCD_P8x16_number(10,0,left_OFFSET);
   \   000000B6   0x....             LDR.N    R0,??DataTable1_10
   \   000000B8   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000BC   0x2100             MOVS     R1,#+0
   \   000000BE   0x200A             MOVS     R0,#+10
   \   000000C0   0x.... 0x....      BL       LCD_P8x16_number
    109                LCD_P8x16_number(70,0,right_OFFSET);
   \   000000C4   0x....             LDR.N    R0,??DataTable1_12
   \   000000C6   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   000000CA   0x2100             MOVS     R1,#+0
   \   000000CC   0x2046             MOVS     R0,#+70
   \   000000CE   0x.... 0x....      BL       LCD_P8x16_number
    110                left_l=0;
   \   000000D2   0x....             LDR.N    R0,??DataTable1_9
   \   000000D4   0x2100             MOVS     R1,#+0
   \   000000D6   0x8001             STRH     R1,[R0, #+0]
    111                right_l=0;
   \   000000D8   0x....             LDR.N    R0,??DataTable1_11
   \   000000DA   0x2100             MOVS     R1,#+0
   \   000000DC   0x8001             STRH     R1,[R0, #+0]
    112                
    113                KeyScan();
   \   000000DE   0x.... 0x....      BL       KeyScan
    114                if(a!=0)break;      
   \   000000E2   0x....             LDR.N    R0,??DataTable1_13
   \   000000E4   0x7800             LDRB     R0,[R0, #+0]
   \   000000E6   0x2800             CMP      R0,#+0
   \   000000E8   0xD0A0             BEQ.N    ??system_init_0
    115              }
    116             for(;;)
    117              {
    118               // delay_ms(1000);
    119              for(i=0;i<1000;i++)
   \                     ??system_init_7:
   \   000000EA   0x2500             MOVS     R5,#+0
   \   000000EC   0xE002             B.N      ??system_init_8
    120              {
    121                 GetSamplezhi();                          //采样电压值
   \                     ??system_init_9:
   \   000000EE   0x.... 0x....      BL       GetSamplezhi
    122              }
   \   000000F2   0x1C6D             ADDS     R5,R5,#+1
   \                     ??system_init_8:
   \   000000F4   0xF44F 0x707A      MOV      R0,#+1000
   \   000000F8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000FA   0x4285             CMP      R5,R0
   \   000000FC   0xD3F7             BCC.N    ??system_init_9
    123                GetOFFSET();
   \   000000FE   0x.... 0x....      BL       GetOFFSET
    124                LCD_P8x16_number(70,4,(int16)(gravity*0.15));
   \   00000102   0x....             LDR.N    R0,??DataTable1_14
   \   00000104   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_i2d
   \   0000010C   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000110   0x....             LDR.N    R3,??DataTable1_15  ;; 0x3fc33333
   \   00000112   0x.... 0x....      BL       __aeabi_dmul
   \   00000116   0x.... 0x....      BL       __aeabi_d2iz
   \   0000011A   0x0002             MOVS     R2,R0
   \   0000011C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000011E   0x2104             MOVS     R1,#+4
   \   00000120   0x2046             MOVS     R0,#+70
   \   00000122   0x.... 0x....      BL       LCD_P8x16_number
    125                Clear();
   \   00000126   0x.... 0x....      BL       Clear
    126                KeyScan_1();
   \   0000012A   0x.... 0x....      BL       KeyScan_1
    127                if(b!=0)break;    
   \   0000012E   0x....             LDR.N    R0,??DataTable1_16
   \   00000130   0x7800             LDRB     R0,[R0, #+0]
   \   00000132   0x2800             CMP      R0,#+0
   \   00000134   0xD0D9             BEQ.N    ??system_init_7
    128              }
    129              hw_pit_init(0,60000);                       //配置pit定时器0,1ms中断(60000)
   \   00000136   0xF64E 0x2160      MOVW     R1,#+60000
   \   0000013A   0x2000             MOVS     R0,#+0
   \   0000013C   0x.... 0x....      BL       hw_pit_init
    130              enable_pit_interrupt(0);                    //开pit中断0通道
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x.... 0x....      BL       enable_pit_interrupt
    131              EnableInterrupts;                           //开启总中断
   \   00000146   0xB662             CPSIE i         
    132          }
   \   00000148   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Pixel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Pixel_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     TIME1flag_20ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     IntegrationTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     integration_piont

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     IntegrationTime_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     integration_piont_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     left_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     left_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     right_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     right_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     gravity

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x3FC33333         DC32     0x3fc33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     `b`

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  main
              8 -> BlackManange
              8 -> LCD_show
              8 -> get_left
              8 -> get_right
              8 -> system_init
       16  system_init
             16 -> CCD_init
             16 -> Clear
             16 -> FTM_QUAD_init
             16 -> GetOFFSET
             16 -> GetSamplezhi
             16 -> KeyScan
             16 -> KeyScan_1
             16 -> LCD_Init
             16 -> LCD_P8x16_number
             16 -> Motor_init
             16 -> StartIntegration
             16 -> StartIntegrationRight
             16 -> __aeabi_d2iz
             16 -> __aeabi_dmul
             16 -> __aeabi_i2d
             16 -> button_init
             16 -> delay_ms
             16 -> enable_pit_interrupt
             16 -> getCCD
             16 -> hw_adc_init
             16 -> hw_pit_init
             16 -> uart_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       1  a
       1  b
       1  integration_piont
       1  integration_piont_Right
     106  main
     330  system_init

 
   4 bytes in section .bss
 504 bytes in section .text
 
 504 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
